// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using alefbafilms.Persistence.Contexts;

#nullable disable

namespace alefbafilm6.Persistence.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230806223614_editGalleryClasses")]
    partial class editGalleryClasses
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("alefbafilm6.Domain.Entities.Gallery.Gallery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Gallery");
                });

            modelBuilder.Entity("alefbafilm6.Domain.Entities.Gallery.GalleryCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GalleryCategory");
                });

            modelBuilder.Entity("alefbafilm6.Domain.Entities.Gallery.GalleryInCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("GalleryCategoryId")
                        .HasColumnType("int");

                    b.Property<long>("GalleryId")
                        .HasColumnType("bigint");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<long>("IdGallery")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GalleryCategoryId");

                    b.HasIndex("GalleryId");

                    b.ToTable("GalleryInCategory");
                });

            modelBuilder.Entity("alefbafilms.domian.Entities.Users.Role", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            id = 1L,
                            InsertTime = new DateTime(2023, 8, 7, 2, 6, 14, 525, DateTimeKind.Local).AddTicks(9323),
                            name = "Admin"
                        },
                        new
                        {
                            id = 2L,
                            InsertTime = new DateTime(2023, 8, 7, 2, 6, 14, 525, DateTimeKind.Local).AddTicks(9357),
                            name = "Operator"
                        },
                        new
                        {
                            id = 3L,
                            InsertTime = new DateTime(2023, 8, 7, 2, 6, 14, 525, DateTimeKind.Local).AddTicks(9367),
                            name = "User"
                        },
                        new
                        {
                            id = 4L,
                            InsertTime = new DateTime(2023, 8, 7, 2, 6, 14, 525, DateTimeKind.Local).AddTicks(9376),
                            name = "Guest"
                        });
                });

            modelBuilder.Entity("alefbafilms.domian.Entities.Users.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<DateTime?>("DeleteTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InsertTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("alefbafilms.domian.Entities.Users.UserInRole", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserInRoles");
                });

            modelBuilder.Entity("alefbafilm6.Domain.Entities.Gallery.GalleryInCategory", b =>
                {
                    b.HasOne("alefbafilm6.Domain.Entities.Gallery.GalleryCategory", "GalleryCategory")
                        .WithMany("GalleryInCategory")
                        .HasForeignKey("GalleryCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("alefbafilm6.Domain.Entities.Gallery.Gallery", "Gallery")
                        .WithMany("GalleryCategory")
                        .HasForeignKey("GalleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gallery");

                    b.Navigation("GalleryCategory");
                });

            modelBuilder.Entity("alefbafilms.domian.Entities.Users.UserInRole", b =>
                {
                    b.HasOne("alefbafilms.domian.Entities.Users.Role", "Role")
                        .WithMany("UserInRole")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("alefbafilms.domian.Entities.Users.User", "User")
                        .WithMany("UserInRole")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("alefbafilm6.Domain.Entities.Gallery.Gallery", b =>
                {
                    b.Navigation("GalleryCategory");
                });

            modelBuilder.Entity("alefbafilm6.Domain.Entities.Gallery.GalleryCategory", b =>
                {
                    b.Navigation("GalleryInCategory");
                });

            modelBuilder.Entity("alefbafilms.domian.Entities.Users.Role", b =>
                {
                    b.Navigation("UserInRole");
                });

            modelBuilder.Entity("alefbafilms.domian.Entities.Users.User", b =>
                {
                    b.Navigation("UserInRole");
                });
#pragma warning restore 612, 618
        }
    }
}
